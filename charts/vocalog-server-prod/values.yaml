image:
  repository: vocalogacr.azurecr.io/vocalog-server
  tag: v1.0
  pullPolicy: IfNotPresent

service:
  main:
    ports:
      http:
        port: 3000
env:
  MASTER_KEY_IPS: 0.0.0.0/0,::/0
  PARSE_DASHBOARD_ALLOW_INSECURE_HTTP: "false"
  SKIP_TURNSTILE_VALIDATION: "true"
  ROOT_URL: https://vocalog-parse.miku.software
  PORT: "3000"
  APP_ID:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: APP_ID
  DASHBOARD_USERNAME:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: DASHBOARD_USERNAME
  DASHBOARD_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: DASHBOARD_PASSWORD
  DASHBOARD_SECRET:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: DASHBOARD_SECRET
  MASTER_KEY:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: MASTER_KEY
  JAVASCRIPT_KEY:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: JAVASCRIPT_KEY
  DATABASE_URI:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: DATABASE_URI
  OPENAI_API_KEY:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: OPENAI_API_KEY
  TURNSTILE_SECRET_KEY:
    valueFrom:
      secretKeyRef:
        name: vocalog-secret
        key: TURNSTILE_SECRET_KEY

ingress:
  main:
    enabled: true
    annotations:
      # HTTPS as entry point
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # Enable TLS
      traefik.ingress.kubernetes.io/router.tls: "true"
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
      cert-manager.io/common-name: vocalog-parse-preview.miku.software
    hosts:
      - host: vocalog-parse-preview.miku.software
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: vocalog-parse-test-tls
        hosts:
          - vocalog-parse-preview.miku.software

mongodb:
  global:
    defaultStorageClass: mongodb-file
  persistence:
    enabled: true
    storageClass: mongodb-file
    size: 8Gi
  architecture: standalone
  serviceAccount:
    create: true
  containerSecurityContext:
    runAsNonRoot: false
  automountServiceAccountToken: true
  rbac:
    create: true
  auth:
    usernames:
      - "admin"
    databases:
      - "parse"
    existingSecret: mongo-password-secret
